{{- range $deploymentKey, $deploymentValue := .Values.deployments }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ index $.Values.names $deploymentKey }}
  namespace: {{ $.Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ index $.Values.names $deploymentKey }}
  template:
    metadata:
      labels:
        app: {{ index $.Values.names $deploymentKey }}
    spec:
      {{- if hasKey $deploymentValue "dnsPolicy" }}
      dnsPolicy: {{ $deploymentValue.dnsPolicy }}
      {{- end }}

      {{- if hasKey $deploymentValue "securityContext" }}
      securityContext:
        {{- toYaml $deploymentValue.securityContext | nindent 8 }}
      {{- end }}

      {{- if hasKey $.Values "privateRegistry" }}
      {{- if $.Values.privateRegistry }}
      imagePullSecrets:
        - name: regcred
      {{- end }}
      {{- end }}

      {{- if hasKey $deploymentValue "dnsConfig" }}
      dnsConfig:
        {{- if hasKey $deploymentValue.dnsConfig "nameservers" }}
        nameservers:
        {{- range $argKey, $argValue :=  $deploymentValue.dnsConfig.nameservers }}
        - {{ $argValue }}
        {{- end }}
        {{- end }}
        {{- if hasKey $deploymentValue.dnsConfig "options" }}
        options:
        {{- toYaml $deploymentValue.dnsConfig.options | nindent 8 }}
        {{- end }}
      {{- end }}

      {{- if hasKey $deploymentValue "containers" }}
      containers:
      {{- range $containerKey, $containerValue :=  $deploymentValue.containers }}
        - name: {{ index $.Values.names $containerKey }}
          image: {{ index $.Values.images $containerKey }}

          {{- if kindIs "map" $containerValue }}
          {{- if hasKey $containerValue "command" }}
          command:
            {{- range $commandKey, $commandValue :=  $containerValue.command }}
            - {{ $commandValue }}
            {{- end }}
          {{- end }}
          {{- end }}

          {{- if kindIs "map" $containerValue }}
          {{- if hasKey $containerValue "securityContext" }}
          securityContext:
            {{- toYaml $containerValue.securityContext | nindent 8 }}
          {{- end }}
          {{- end }}


          {{- if kindIs "map" $containerValue }}
          {{- if hasKey $containerValue "args" }}
          args:
            {{- range $argKey, $argValue :=  $containerValue.args }}
            - {{ $argValue }}
            {{- end }}
          {{- end }}
          {{- end }}

          {{- if index (default dict $.Values.configmaps) $containerKey }}
          envFrom:
            {{- range $configmapKey, $configmapValue :=  index $.Values.configmaps $containerKey }}
            - configMapRef:
                name: {{ $configmapValue.name }}
            {{- end }}
          {{- end }}

          {{- if index (default dict $.Values.secrets) $containerKey }}
          env:
            {{- range $secretKey, $secretValue :=  index $.Values.secrets $containerKey }}
            - name: {{ $secretValue.varName }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretValue.valueFrom.name }}
                  key: {{ $secretValue.valueFrom.key }}
            {{- end }}
          {{- end }}

          {{- $persistentVolumeExists := index (default dict $.Values.persistentVolumes) $containerKey }}
          {{- $mountedConfigMaps := default dict (index (default dict $.Values.mountedConfigmaps) $deploymentKey) }}
          {{- $configMapExists := index $mountedConfigMaps $containerKey }}
          {{- $hostPathExists := index (default dict $.Values.hostPath) $containerKey }}
          {{- if or $persistentVolumeExists $configMapExists $hostPathExists}}
          volumeMounts:
            {{- if $persistentVolumeExists }}
            {{- range $volumeKey, $volumeValue :=  index $.Values.persistentVolumes $containerKey }}
            - mountPath: {{ $volumeValue.mountPath }}
              name: {{ $volumeValue.name }}
            {{- end }}
            {{- end }}

            {{- if index $mountedConfigMaps $containerKey }}
            {{- range $confiMapKey, $configmapValue :=  index $mountedConfigMaps $containerKey }}
            - mountPath: {{ $configmapValue.mountPath }}
              name: {{ $configmapValue.name }}
              {{- if index $configmapValue "subPath" }}
              subPath: {{ $configmapValue.subPath }}
              {{- end }}
            {{- end }}
            {{- end }}

            {{- if $hostPathExists }}
            {{- range $hostPathKey, $hostPathValue :=  index $.Values.hostPath $containerKey }}
            - mountPath: {{ $hostPathValue.mountPath }}
              name: {{ $hostPathValue.name }}
              readOnly: {{ default true $hostPathValue.readOnly }}
            {{- end }}
            {{- end }}

          {{- end }}
      {{- end }}
      {{- end }}

      {{- $persistentVolumeExists := index (default dict $.Values.persistentVolumes) $deploymentKey }}
      {{- $configMapExists := index (default dict $.Values.mountedConfigmaps) $deploymentKey }}
      {{- $hostPathExists := index (default dict $.Values.hostPath) $deploymentKey }}
      {{- if or $persistentVolumeExists $configMapExists $hostPathExists}}
      volumes:
        {{- if or $persistentVolumeExists }}
        {{- range $volumeKey, $volumeValue :=  index $.Values.persistentVolumes $deploymentKey }}
        - name: {{ $volumeValue.name }}
          persistentVolumeClaim:
            claimName: {{ $volumeValue.claimName }}
        {{- end }}
        {{- end }}


        {{- if or $hostPathExists }}
        {{- range $volumeKey, $volumeValue :=  index $.Values.hostPath $deploymentKey }}
        - name: {{ $volumeValue.name }}
          hostPath:
            path: {{ $volumeValue.path }}
            type: {{ default "Directory" $volumeValue.type }}
        {{- end }}
        {{- end }}

        {{- if $configMapExists }}
        {{- range $deploymentConfigmapsKey, $deploymentConfigmapsValue :=  index $.Values.mountedConfigmaps $deploymentKey }}
        {{- range $configmapKey, $configmapValue :=  $deploymentConfigmapsValue }}
        - name: {{ $configmapValue.name }}
          configMap:
            name: {{ $configmapValue.name }}
        {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
{{- end }}
