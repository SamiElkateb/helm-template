{{- if hasKey .Values "ingress" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
    traefik.ingress.kubernetes.io/custom-response-headers: "Access-Control-Allow-Origin:*||Access-Control-Allow-Methods:GET,POST,OPTIONS||Access-Control-Allow-Headers:DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range||Access-Control-Expose-Headers:Content-Length,Content-Range"
  name: {{ .Values.ingress.name }}
  namespace: {{ .Values.namespace }}
spec:
  rules:
  {{- range $ingressKey, $ingressValue := .Values.ingress.rules }}
  - host: {{ $ingressValue.subdomain }}.{{ $.Values.hostname }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ index $.Values.names $ingressValue.serviceName }}
            port:
              number: {{ (index $.Values.services $ingressValue.serviceName).ports.main.port }}
  {{- end }}
  tls:
  {{- range $ingressKey, $ingressValue := .Values.ingress.rules }}
  - hosts:
      - {{ $ingressValue.subdomain }}.{{ $.Values.hostname }}
    secretName: {{ $.Values.secrets.ssl.name }}
  {{- end }}
{{- end }}
